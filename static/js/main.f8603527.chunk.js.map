{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","addUrl","a","console","log","fetch","response","ok","Error","json","FindMovie","toAddMovie","useState","query","toQueryState","findMovie","toFindMovieState","statusLoading","setStatusLoading","showError","setShowErrorState","addToList","setAddToList","downloadMovie","length","newMovie","onSubmit","event","preventDefault","htmlFor","name","value","onChange","inputValue","target","type","id","placeholder","onClick","disabled","App","toMoviesList","addMovie","every","newMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8603527.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      <p>list</p>\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","// eslint-disable-next-line\nconst API_URL = `https://www.omdbapi.com/?i=tt3896198&apikey=8327dd52&t=`;\n\n// export function getCurrentMovie(userId: number): Promise<Movie[]> {\n//   return fetch(`${API_URL}/users/${userId}`)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error('error download user');\n//       }\n\n//       return response.json();\n//     });\n// }\n\nexport async function getMovie(addUrl: string): Promise<Movie> {\n  // eslint-disable-next-line no-console\n  console.log(`${API_URL}${addUrl}`);\n\n  const response = await fetch(`${API_URL}${addUrl}`);\n\n  //  eslint-disable-next-line no-console\n  console.log('response', response);\n\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.log('test');\n\n    throw new Error('error');\n  }\n\n  return response.json();\n\n  //   .then(response => {\n  //   // eslint-disable-next-line no-console\n  //   // console.log(response);\n\n  //   if (!response.ok) {\n  //     throw new Error('error');\n  //   }\n\n  //   return response.json();\n  // // eslint-disable-next-line no-console\n  // }, (error) => console.log('error Url', error));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/movies';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  toAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ toAddMovie }) => {\n  const [query, toQueryState] = useState('');\n  const [findMovie, toFindMovieState] = useState<Movie | null>(null);\n  const [statusLoading, setStatusLoading] = useState(false);\n  const [showError, setShowErrorState] = useState(false);\n  const [addToList, setAddToList] = useState(false);\n\n  // control query......................................................\n  const changeQueryHandler = (inputValue: string) => {\n    setShowErrorState(false);\n    toQueryState(inputValue);\n  };\n\n  // async download movie...............................................\n  const downloadMovie = async () => {\n    if (query.length > 0) {\n      setStatusLoading(true);\n\n      try {\n        // eslint-disable-next-line no-console\n        console.log('try to start download');\n        const newMovie = await getMovie(query);\n\n        setStatusLoading(false);\n\n        // eslint-disable-next-line no-console\n        console.log('newMovie', newMovie);\n\n        // eslint-disable-next-line no-console\n        console.log('add new movie to state', newMovie.Title);\n        toFindMovieState(newMovie);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log('catch error');\n        setShowErrorState(true);\n        setStatusLoading(false);\n      }\n    }\n  };\n\n  const addToListHandler = (value: boolean) => {\n    setAddToList(value);\n\n    // eslint-disable-next-line no-console\n    console.log(addToList);\n\n    if (findMovie) {\n      toAddMovie(findMovie);\n      toFindMovieState({\n        Poster: '',\n        Title: '',\n        Plot: '',\n        imdbID: '',\n      });\n\n      setAddToList(false);\n    }\n  };\n\n  const submitForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    downloadMovie();\n\n    // eslint-disable-next-line no-console\n    console.log('movie = ');\n\n    // eslint-disable-next-line no-console\n    console.log('addToListApp?', addToList);\n\n    // don't work: i try to receive addToList as permissionn\n  };\n\n  return (\n    <>\n      {statusLoading && (<p>Loading...</p>)}\n      {showError && (<p>error</p>)}\n      <form\n        className=\"find-movie\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                name=\"title\"\n                value={query}\n                onChange={event => changeQueryHandler(event.target.value)}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n              />\n            </div>\n          </label>\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addToListHandler(true)}\n              disabled={!findMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {findMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={findMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, toMoviesList] = useState<Movie[]>([]);\n\n  const toAddMovie = (addMovie: Movie) => {\n    if (movies.every(movie => movie.imdbID !== addMovie.imdbID)) {\n      const newMovies = [...movies, addMovie];\n\n      // eslint-disable-next-line no-console\n      console.log('added movie to movielist', newMovies);\n\n      toMoviesList(newMovies);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('there is the same movie');\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          toAddMovie={toAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/request.ts","components/FindMovie/FindMovie.tsx","api/movies.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","request","addUrl","a","console","log","fetch","then","response","ok","status","statusText","json","FindMovie","toAddMovie","useState","query","toQueryState","findMovie","setFindMovie","showLoader","setShowLoader","showError","setShowError","addToList","setAddToList","downloadMovie","newMovie","onSubmit","event","preventDefault","length","htmlFor","name","value","onChange","inputValue","target","type","id","placeholder","classNames","onClick","disabled","App","moviesList","setMoviesList","addMovie","every","newMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00be21c2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      <p>list</p>\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=8327dd52&t=';\n\nexport const request = async (addUrl: string): Promise<Movie> => {\n  // eslint-disable-next-line no-console\n  console.log(`${API_URL}${addUrl}`);\n\n  return fetch(`${API_URL}${addUrl}`)\n    .then(response => {\n      if (!response.ok) {\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw `${response.status} - ${response.statusText}`;\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/movies';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  toAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ toAddMovie }) => {\n  const [query, toQueryState] = useState('');\n  const [findMovie, setFindMovie] = useState<Movie | null>(null);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [addToList, setAddToList] = useState(false);\n\n  // control query......................................................\n  const changeQueryHandler = (inputValue: string) => {\n    setShowError(false);\n    setFindMovie(null);\n    toQueryState(inputValue);\n  };\n\n  // async download movie...............................................\n  const downloadMovie = async () => {\n    setShowError(false);\n    setShowLoader(true);\n    setFindMovie(null);\n\n    try {\n      const newMovie = await getMovie(query);\n\n      // eslint-disable-next-line no-console\n      console.log('undefined if didnt find', newMovie.imdbID);\n\n      setFindMovie(newMovie);\n\n      // if (newMovie.imdbID) {\n      //   setFindMovie(newMovie);\n      // } else {\n      //   setShowError(true);\n      // }\n      // work but its not a catch mistake\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('catch error', error);\n\n      setShowError(true);\n    } finally {\n      setShowLoader(false);\n    }\n  };\n\n  const addToListHandler = (value: boolean) => {\n    setAddToList(value);\n\n    // eslint-disable-next-line no-console\n    console.log(addToList);\n\n    if (findMovie) {\n      toAddMovie(findMovie);\n      setFindMovie(null);\n\n      setAddToList(false);\n    }\n  };\n\n  const submitForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (query.length === 0) {\n      setShowError(true);\n    } else {\n      downloadMovie();\n    }\n  };\n\n  return (\n    <>\n      {showLoader && (<p>Loading...</p>)}\n      <form\n        className=\"find-movie\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                name=\"title\"\n                value={query}\n                onChange={event => changeQueryHandler(event.target.value)}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input',\n                  { 'is-danger': showError })}\n              />\n            </div>\n          </label>\n          {showError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addToListHandler(true)}\n              disabled={!findMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {findMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={findMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { request } from './request';\n\nexport const getMovie = (addUrl: string) => request(addUrl);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n\n  const toAddMovie = (addMovie: Movie) => {\n    if (moviesList.every(movie => movie.imdbID !== addMovie.imdbID)) {\n      const newMovies = [...moviesList, addMovie];\n\n      // eslint-disable-next-line no-console\n      console.log('added movie to movielist', newMovies);\n\n      setMoviesList(newMovies);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('there is the same movie');\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          toAddMovie={toAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
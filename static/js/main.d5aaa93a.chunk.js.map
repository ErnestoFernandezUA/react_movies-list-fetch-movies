{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/request.ts","components/FindMovie/FindMovie.tsx","api/movies.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","request","addUrl","a","console","log","fetch","then","response","ok","status","statusText","json","FindMovie","toAddMovie","sameMovie","setSameMovie","useState","inputValue","setInputValue","findMovie","setFindMovie","showLoader","setShowLoader","showError","setShowError","findError","setFindError","downloadMovie","Error","onSubmit","event","preventDefault","length","htmlFor","name","value","onChange","target","type","id","placeholder","classNames","onClick","disabled","App","moviesList","setMoviesList","addMovie","every","newMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCbfC,G,MAAU,4BAEHC,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DAErBC,QAAQC,IAAR,UAAeL,GAAf,OAAyBE,IAFJ,kBAIdI,MAAM,GAAD,OAAIN,GAAJ,OAAcE,IACvBK,MAAK,SAAAC,GACJ,IAAKA,EAASC,GAIZ,MAFAL,QAAQC,IAAI,kBAEP,GAAL,OAASG,EAASE,OAAlB,cAA8BF,EAASG,YAGzC,OAAOH,EAASI,WAbC,2CAAH,sDCWPC,EAA6B,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAClE,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAuB,MAAzD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KASMC,EAAa,uCAAG,4BAAAzB,EAAA,6DACpBsB,GAAa,GACbF,GAAc,GACdF,EAAa,MAHO,kBCvBCnB,ED6BagB,EC7BgDjB,EAAQ,uBAAD,OAF9E,WAE8E,cACxDC,IDsBb,OAQd,UAFEM,EANY,SAWhBJ,QAAQC,IAAIG,EAASqB,OAErBF,GAAa,IAEbN,EAAab,GAfG,kDAoBlBJ,QAAQC,IAAI,cAAZ,MAEAoB,GAAa,GAtBK,yBAwBlBF,GAAc,GAxBI,+CCvBA,IAACrB,IDuBD,2BAAH,qDA8CnB,OACE,qCACGoB,GAAe,2CAChB,uBACEhC,UAAU,aACVwC,SAfa,SAACC,GAClBA,EAAMC,iBAEoB,IAAtBd,EAAWe,OACbR,GAAa,GAEbG,KAOA,UAIE,sBAAKtC,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ4C,QAAQ,cAAjC,wBAEE,qBAAK5C,UAAU,UAAf,SACE,uBACE6C,KAAK,QACLC,MAAOlB,EACPmB,SAAU,SAAAN,GAAK,OAnEDK,EAmEwBL,EAAMO,OAAOF,MAlE/DX,GAAa,GACbT,GAAa,GACbK,EAAa,WACbF,EAAciB,GAJW,IAACA,GAoEdG,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnD,UAAWoD,IAAW,QACpB,CAAE,YAAalB,WAItBA,GACC,mBAAGlC,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEiD,KAAK,SACLjD,UAAU,kBAFZ,4BAQF,qBAAKA,UAAU,UAAf,SACE,wBACEiD,KAAK,SACLjD,UAAU,oBACVqD,QAAS,WA7DD,OAAdvB,IACFN,EAAWM,GACXC,EAAa,MACbF,EAAc,MA2DNyB,UAAWxB,EAJb,qCAYN,sBAAK9B,UAAU,YAAf,UACkB,OAAd8B,GACA,qCACE,oBAAI9B,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAO+B,OAGrBL,GAAa,+DACbW,GAAa,oEEjITmB,EAAgB,WAC3B,MAAoC5B,mBAAkB,IAAtD,mBAAO6B,EAAP,KAAmBC,EAAnB,KACA,EAAkC9B,oBAAkB,GAApD,mBAAOF,EAAP,KAAkBC,EAAlB,KAiBA,OACE,sBAAK1B,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQiD,MAEtB,qBAAKxD,UAAU,UAAf,SACE,cAAC,EAAD,CACEwB,WAtBW,SAACkC,GAClB,GAAIF,EAAWG,OAAM,SAAA5D,GAAK,OAAIA,EAAMU,SAAWiD,EAASjD,UAAS,CAC/D,IAAMmD,EAAS,sBAAOJ,GAAP,CAAmBE,IAGlC5C,QAAQC,IAAI,2BAA4B6C,GAExCH,EAAcG,QAGd9C,QAAQC,IAAI,2BACZW,GAAa,IAYTD,UAAWA,EACXC,aAAcA,UC7BxBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5aaa93a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/';\n\nexport const request = async (addUrl: string): Promise<Movie> => {\n  // eslint-disable-next-line no-console\n  console.log(`${API_URL}${addUrl}`);\n\n  return fetch(`${API_URL}${addUrl}`)\n    .then(response => {\n      if (!response.ok) {\n        // eslint-disable-next-line no-console\n        console.log('response error');\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw `${response.status} - ${response.statusText}`;\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/movies';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  toAddMovie: (movie: Movie) => void,\n  sameMovie: boolean;\n  setSameMovie: (value: boolean) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ toAddMovie, sameMovie, setSameMovie }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [findMovie, setFindMovie] = useState<Movie | null>(null);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [findError, setFindError] = useState(false);\n\n  const changeQueryHandler = (value: string) => {\n    setShowError(false);\n    setSameMovie(false);\n    setFindMovie(null);\n    setInputValue(value);\n  };\n\n  const downloadMovie = async () => {\n    setShowError(false);\n    setShowLoader(true);\n    setFindMovie(null);\n\n    try {\n      const response = await getMovie(inputValue);\n\n      if ('Error' in response) {\n        // Error when response is not a Movie\n        // eslint-disable-next-line no-console\n        console.log(response.Error);\n\n        setFindError(true);\n      } else {\n        setFindMovie(response);\n      }\n    } catch (error) {\n      // Error of fetch\n      // eslint-disable-next-line no-console\n      console.log('catch error', error);\n\n      setShowError(true);\n    } finally {\n      setShowLoader(false);\n    }\n  };\n\n  const addToListHandler = () => {\n    if (findMovie !== null) {\n      toAddMovie(findMovie);\n      setFindMovie(null);\n      setInputValue('');\n    }\n  };\n\n  const submitForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (inputValue.length === 0) {\n      setShowError(true);\n    } else {\n      downloadMovie();\n    }\n  };\n\n  return (\n    <>\n      {showLoader && (<p>Loading...</p>)}\n      <form\n        className=\"find-movie\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                name=\"title\"\n                value={inputValue}\n                onChange={event => changeQueryHandler(event.target.value)}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input',\n                  { 'is-danger': showError })}\n              />\n            </div>\n          </label>\n          {showError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addToListHandler()}\n              disabled={!findMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {(findMovie !== null) && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={findMovie} />\n          </>\n        )}\n        {sameMovie && <>there is the same movie</>}\n        {findError && <>can&#x27;t find this movie</>}\n      </div>\n    </>\n  );\n};\n","import { request } from './request';\n\nconst apiKey = '8327dd52';\n\nexport const getMovie = (addUrl: string): Promise<Movie | FetchMovieErrorResponse> => request(\n  `?i=tt3896198&apikey=${apiKey}&t=${addUrl}`,\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n  const [sameMovie, setSameMovie] = useState<boolean>(false);\n\n  const toAddMovie = (addMovie: Movie) => {\n    if (moviesList.every(movie => movie.imdbID !== addMovie.imdbID)) {\n      const newMovies = [...moviesList, addMovie];\n\n      // eslint-disable-next-line no-console\n      console.log('added movie to movielist', newMovies);\n\n      setMoviesList(newMovies);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('there is the same movie');\n      setSameMovie(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          toAddMovie={toAddMovie}\n          sameMovie={sameMovie}\n          setSameMovie={setSameMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}